#loading libraries

library(caret);library(ggplot2);library(lattice);library(rpart);library(rpart.plot);library(survival);library(parallel)
library(splines);library(gbm);library(randomForest);library(plyr);library(adabag);library(mlbench)


trainingurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testingurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"


#reading the csv files

training <- read.csv(trainingurl, na.strings=c("NA","#DIV/0!",""))
testing <- read.csv(testingurl, na.strings=c("NA","#DIV/0!",""))


#removing variables with zero variances

zerovar <- nearZeroVar(training, saveMetrics=TRUE)
training <- training[,!zerovar$nzv]


#removing unused variable
training <- training[,-c(1:6)]


#removing columns that are mostly NAs
is.data <- (apply(!is.na(training),2,sum)>= .7*nrow(training))
training <- training[,is.data]


#partitioning the data into training and testing parts

set.seed(1234)
inTrain <- createDataPartition(training$classe, p =.7, list=FALSE)
trainset <- training[inTrain,]
testset <- training[-inTrain,]

#Prediction with adaboost bagging method (adabag)

adabagmod <- train(classe ~., data=trainset, method="AdaBag")
predadabag <- predict(adabagmod, testset)
confusionMatrix(predadabag, testset$classe)
confadabag <- confusionMatrix(predadabag, testset$classe)

#prediction with Gradient Boosting Method (gbm)

gbmmod <- train(classe ~., method ="gbm", data = trainset, verbose=FALSE)
predgbm <- predict(gbmmod, testset)
confgbm <- confusionMatrix(predgbm,testset$classe)

#prediction with recursive partitioning and regresssion trees (rpart) method

rpartmod <- rpart(classe~., data=trainset)
rpart.plot(rpartmod, extra = 100)
predrpart <- predict(rpartmod, testset, type="class")
confrpart <- confusionMatrix(predrpart, testset$classe)


#prediction using randomForest (rf)
rfmod <- randomForest(classe ~., data=trainset, method="class")
predrf <- predict(rfmod, testset, type="class")
confrf <- confusionMatrix(predrf, testset$classe)

method <- c("rpart", "rf", "adabag","gbm")
accuracy <- c(confrpart$overall[1],confrf$overall[1],confadabag$overall[1],confgbm$overall[1])
accuracytable <- data.frame(method,accuracy)
accuracytable

#making the final prediction with rf, since it has more accuracy
predfinal <- predict(rfmod, testing, type="class")
predfinal
